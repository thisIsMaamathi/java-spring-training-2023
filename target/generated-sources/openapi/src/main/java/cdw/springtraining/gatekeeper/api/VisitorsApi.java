/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package cdw.springtraining.gatekeeper.api;

import cdw.springtraining.gatekeeper.models.ScheduleResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-10-17T13:15:27.851200+05:30[Asia/Kolkata]")
@Validated
@Api(value = "Visitors", description = "the Visitors API")
public interface VisitorsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /visitor : Visitor can view all their information
     *
     * @param visitorPass  (required)
     * @return Fetched visitor information (status code 200)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "Visitor can view all their information", nickname = "getVisitorDetails", notes = "", response = ScheduleResponse.class, tags={ "Visitors", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Fetched visitor information", response = ScheduleResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/visitor",
        produces = { "application/json" }
    )
    default ResponseEntity<ScheduleResponse> getVisitorDetails(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "visitorPass", required = true) String visitorPass) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2000-01-23\", \"additionalInformation\" : \"additionalInformation\", \"phone\" : 1, \"pass\" : \"pass\", \"name\" : \"name\", \"aadhar\" : 6, \"residenceId\" : 5, \"visitorId\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
